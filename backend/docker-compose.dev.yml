version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ridesharex-postgres-dev
    environment:
      POSTGRES_DB: ridesharex_dev
      POSTGRES_USER: ridesharex
      POSTGRES_PASSWORD: ridesharex_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ridesharex-dev-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ridesharex-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - ridesharex-dev-network
    restart: unless-stopped

  # Backend API (Development)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: ridesharex-backend-dev
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://ridesharex:ridesharex_password@postgres:5432/ridesharex_dev
      REDIS_URL: redis://redis:6379
      FRONTEND_URL: http://localhost:5173
      # JWT secrets removed - using Firebase Authentication only
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
      FIREBASE_PRIVATE_KEY: ${FIREBASE_PRIVATE_KEY}
      FIREBASE_CLIENT_EMAIL: ${FIREBASE_CLIENT_EMAIL}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      PAYFAST_MERCHANT_ID: ${PAYFAST_MERCHANT_ID}
      PAYFAST_MERCHANT_KEY: ${PAYFAST_MERCHANT_KEY}
      PAYFAST_PASSPHRASE: ${PAYFAST_PASSPHRASE}
      PAYFAST_SANDBOX: true
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - ridesharex-dev-network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: npm run dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  ridesharex-dev-network:
    driver: bridge
